// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace EfCoreModelsLib.Models.Mysql;

[Index("OriginalTitle", Name = "original_title_index")]
[Index("PrimaryTitle", Name = "primary_title_index")]
[Index("TitleType", Name = "title_type_index")]
public partial class Titles
{
    [Key]
    [Column("title_id")]
    public Guid TitleId { get; set; }

    [Required]
    [Column("title_type")]
    [StringLength(100)]
    public string TitleType { get; set; }

    [Required]
    [Column("primary_title")]
    public string PrimaryTitle { get; set; }

    [Required]
    [Column("original_title")]
    public string OriginalTitle { get; set; }

    [Column("is_adult")]
    public bool IsAdult { get; set; }

    [Column("start_year")]
    public int StartYear { get; set; }

    [Column("end_year")]
    public int? EndYear { get; set; }

    [Column("runtime_minutes")]
    public int? RuntimeMinutes { get; set; }

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<Actors> Actors { get; set; } = new List<Actors>();

    [InverseProperty("TitleNavigation")]
    public virtual ICollection<Aliases> Aliases { get; set; } = new List<Aliases>();

    [InverseProperty("Title")]
    public virtual ICollection<Comments> Comments { get; set; } = new List<Comments>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<Directors> Directors { get; set; } = new List<Directors>();

    [InverseProperty("TitleIdChildNavigation")]
    public virtual ICollection<Episodes> EpisodesTitleIdChildNavigation { get; set; } = new List<Episodes>();

    [InverseProperty("TitleIdParentNavigation")]
    public virtual ICollection<Episodes> EpisodesTitleIdParentNavigation { get; set; } = new List<Episodes>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<KnownFor> KnownFor { get; set; } = new List<KnownFor>();

    [InverseProperty("Title")]
    public virtual ICollection<Ratings> Ratings { get; set; } = new List<Ratings>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<Writers> Writers { get; set; } = new List<Writers>();

    [ForeignKey("TitlesTitleId")]
    [InverseProperty("TitlesTitle")]
    public virtual ICollection<Genres> GenresGenre { get; set; } = new List<Genres>();
}