// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace SeedData.Models;

[Index("OriginalTitle", Name = "original_title_index")]
[Index("PrimaryTitle", Name = "primary_title_index")]
[Index("TitleType", Name = "title_type_index")]
public partial class Title
{
    [Key]
    [Column("title_id")]
    public Guid TitleId { get; set; }

    [Required]
    [Column("title_type")]
    [StringLength(100)]
    public string TitleType { get; set; }

    [Required]
    [Column("primary_title")]
    public string PrimaryTitle { get; set; }

    [Required]
    [Column("original_title")]
    public string OriginalTitle { get; set; }

    [Column("is_adult")]
    public bool IsAdult { get; set; }

    [Column("start_year", TypeName = "year")]
    public short StartYear { get; set; }

    [Column("end_year", TypeName = "year")]
    public short? EndYear { get; set; }

    [Column("runtime_minutes")]
    public int? RuntimeMinutes { get; set; }

    [InverseProperty("PersonsPerson")]
    public virtual ICollection<Actor> Actors { get; set; } = new List<Actor>();

    [InverseProperty("TitleNavigation")]
    public virtual ICollection<Alias> Aliases { get; set; } = new List<Alias>();

    [InverseProperty("Title")]
    public virtual ICollection<Comment> Comments { get; set; } = new List<Comment>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<Director> Directors { get; set; } = new List<Director>();

    [InverseProperty("TitleIdChildNavigation")]
    public virtual ICollection<Episode> EpisodeTitleIdChildNavigations { get; set; } = new List<Episode>();

    [InverseProperty("TitleIdParentNavigation")]
    public virtual ICollection<Episode> EpisodeTitleIdParentNavigations { get; set; } = new List<Episode>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<KnownFor> KnownFors { get; set; } = new List<KnownFor>();

    [InverseProperty("Title")]
    public virtual ICollection<Rating> Ratings { get; set; } = new List<Rating>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<TitlesHasGenre> TitlesHasGenres { get; set; } = new List<TitlesHasGenre>();

    [InverseProperty("TitlesTitle")]
    public virtual ICollection<Writer> Writers { get; set; } = new List<Writer>();
}