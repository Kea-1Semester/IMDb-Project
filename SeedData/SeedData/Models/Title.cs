// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace SeedData.Models;

[Index("original_title", Name = "original_title_index")]
[Index("primary_title", Name = "primary_title_index")]
[Index("title_type", Name = "title_type_index")]
public partial class Title
{
    [Key]
    public Guid title_id { get; set; }

    [Required]
    [StringLength(100)]
    public string title_type { get; set; }

    [Required]
    public string primary_title { get; set; }

    [Required]
    public string original_title { get; set; }

    public bool is_adult { get; set; }

    [Column(TypeName = "year")]
    public short start_year { get; set; }

    [Column(TypeName = "year")]
    public short? end_year { get; set; }

    public int? runtime_minutes { get; set; }

    [InverseProperty("Persons_person")]
    public virtual ICollection<Actor> Actors { get; set; } = new List<Actor>();

    [InverseProperty("titleNavigation")]
    public virtual ICollection<Alias> Aliases { get; set; } = new List<Alias>();

    [InverseProperty("title")]
    public virtual ICollection<Comment> Comments { get; set; } = new List<Comment>();

    [InverseProperty("Titles_title")]
    public virtual ICollection<Director> Directors { get; set; } = new List<Director>();

    [InverseProperty("title_id_childNavigation")]
    public virtual ICollection<Episode> Episodetitle_id_childNavigations { get; set; } = new List<Episode>();

    [InverseProperty("title_id_parentNavigation")]
    public virtual ICollection<Episode> Episodetitle_id_parentNavigations { get; set; } = new List<Episode>();

    [InverseProperty("Titles_title")]
    public virtual ICollection<Known_for> Known_fors { get; set; } = new List<Known_for>();

    [InverseProperty("title")]
    public virtual ICollection<Rating> Ratings { get; set; } = new List<Rating>();

    [InverseProperty("Titles_title")]
    public virtual ICollection<Titles_has_Genre> Titles_has_Genres { get; set; } = new List<Titles_has_Genre>();

    [InverseProperty("Titles_title")]
    public virtual ICollection<Writer> Writers { get; set; } = new List<Writer>();
}